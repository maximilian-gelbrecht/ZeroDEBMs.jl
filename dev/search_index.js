var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ZeroDEBMs","category":"page"},{"location":"#Exercise8","page":"Home","title":"Exercise8","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ZeroDEBMs. This package implements the zero-dimensional energy balance models (EBMs) introduced in the lecture. The models are coded so that different 0D-EBMs can be easily composed. E.g. via ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using ZeroDEBMs, OrdinaryDiffEq\n\nmodel = ZeroDEBM(R_in=IncomingRadiation(α=TanhAlbedo()), R_out=StefanBoltzmannRadiation()) \n\nprob = ODEProblem(model, 270., (0.,4.), [])\nsol = solve(prob, Tsit5())","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ZeroDEBMs]","category":"page"},{"location":"#ZeroDEBMs.AbstractEBM","page":"Home","title":"ZeroDEBMs.AbstractEBM","text":"AbstractEBM{T}\n\nSupertype of all EBMs. \n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.AbstractIncomingRadiation","page":"Home","title":"ZeroDEBMs.AbstractIncomingRadiation","text":"AbstractIncomingRadiation{T}\n\nSupertype of all incoming radiation / energy schemes. \n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.AbstractOutgoingRadiation","page":"Home","title":"ZeroDEBMs.AbstractOutgoingRadiation","text":"AbstractOutgoingRadiation{T}\n\nSueprtype of all outgoing radiation / engery schemes. \n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.AbstractZeroDEBM","page":"Home","title":"ZeroDEBMs.AbstractZeroDEBM","text":"AbstractZeroDEBM{T} <: AbstractEBM{T}\n\nSupertype of all zero dimensional EBMs. \n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.BudykoRadiation","page":"Home","title":"ZeroDEBMs.BudykoRadiation","text":"BudykoRadiation{T} <: AbstractOutgoingRadiation{T}\n\nImplements the outgoing radiation given by Budyko's linear approach \n\nbeginaligned\n    R_out(T) = A + Bcdot T \nendaligned\n\nBy default A = 202 Wm^-2 and B = 145 W m^-2 C^-1.\n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.IncomingRadiation","page":"Home","title":"ZeroDEBMs.IncomingRadiation","text":"IncomingRadiation{T,F} <: AbstractIncomingRadiation\n\nImplements the incoming radiation given by the formula \n\nbeginaligned\n    R_in(Tp) = (1 - α(Tp)) fracS_04\nendaligned\n\nInitialized by handing over an albedo, that is a callable function (T,p) -> α or one of the albedo implemented in this package like TanhAlbedo.  \n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.StefanBoltzmannRadiation","page":"Home","title":"ZeroDEBMs.StefanBoltzmannRadiation","text":"StefanBoltzmannRadiation{T} <: AbstractOutgoingRadiation{T}\n\nImplements the outgoing radiation given by the Stefan Boltzmann law, potentially reduced by a Greenhouse factor ε \n\nbeginaligned\n    R_out(T) = varepsilonsigma T^4 \nendaligned\n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.TanhAlbedo","page":"Home","title":"ZeroDEBMs.TanhAlbedo","text":"TanhAlbedo{T}\n\nInitializes the albedo to depend on temperature with a tanh function \n\nbeginaligned\n    alpha(T) = alpha_0 - fracalpha_12 (tanh(T - hatT))\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"#ZeroDEBMs.ZeroDEBM","page":"Home","title":"ZeroDEBMs.ZeroDEBM","text":"ZeroDEBM{T} <: AbstractZeroDEBM\n\nFields\n\nR_in::AbstractIncomingRadiation\nR_out::AbstractOutgoingRadiation`\n\nAs default it constructs a EBM with a tanh-albedo and Boltzmann outgoing radiation. \n\n\n\n\n\n","category":"type"}]
}
